/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package myPanel;

import domain.DisplayData;
import domain.Donation;
import domain.Donor;
import domain.InsertData;
import domain.Request;
import domain.RetrieveData;
import domain.UpdateData;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

/**
 *
 * @author Shadhin
 */
public class BloodRequestApproval extends javax.swing.JPanel {

    /**
     * Creates new form RequestApproval
     */
    public BloodRequestApproval() {
        initComponents();
        //showRequestTable();

    }
    
    DisplayData dd = new DisplayData();
    DefaultTableModel model;
    
    public void showRequestTable() {
        
        try {
            model.setRowCount(0);
        } catch (Exception e) {
        }
        ArrayList<Request> requestList = dd.getRequestList();
        model = (DefaultTableModel) bloodRequestTable.getModel();
        Object[] row = new Object[10];
        for (int i = 0; i < requestList.size(); i++) {
            row[0] = requestList.get(i).getRequestId();
            row[1] = requestList.get(i).getrName();
            row[2] = requestList.get(i).getrSex();
            row[3] = requestList.get(i).getrBloodG();
            row[4] = requestList.get(i).getrMobileN();
            row[5] = requestList.get(i).getrEmail();
            row[6] = requestList.get(i).getrAddress();
            row[7] = requestList.get(i).getrAlternativeMN();
            row[8] = requestList.get(i).getRequestDate();
            row[9] = requestList.get(i).getrApproval();
            model.addRow(row);
            
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        bReqApprovalB = new javax.swing.JButton();
        bReqIdTF = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        bloodRequestTable = new javax.swing.JTable();
        bReqNameTF = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        bReqBloodGTF = new javax.swing.JTextField();
        bReqMobileNTF = new javax.swing.JTextField();

        setMaximumSize(new java.awt.Dimension(700, 503));
        setMinimumSize(new java.awt.Dimension(700, 503));

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setText("Blood Group:");

        bReqApprovalB.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        bReqApprovalB.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/approveButtonIcon.png"))); // NOI18N
        bReqApprovalB.setText("Approve");
        bReqApprovalB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bReqApprovalBActionPerformed(evt);
            }
        });

        bReqIdTF.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel3.setText("Blood Request");

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel1.setText("Request Id:");

        bloodRequestTable.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        bloodRequestTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Full Name", "Sex", "Blood Group", "Mobile Number", "Email", "Address", "Alternative Mobile Number", "Date", "Approval"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, true, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        bloodRequestTable.setColumnSelectionAllowed(true);
        bloodRequestTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                bloodRequestTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(bloodRequestTable);
        bloodRequestTable.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);

        bReqNameTF.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel4.setText("Full Name:");

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel5.setText("Mobile Number:");

        bReqBloodGTF.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        bReqMobileNTF.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(bReqNameTF, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel1)
                                    .addGap(18, 18, 18)
                                    .addComponent(bReqIdTF, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(jLabel4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 32, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(32, 32, 32))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addGap(18, 18, 18)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(bReqBloodGTF, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(bReqMobileNTF, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(19, 19, 19)
                        .addComponent(bReqApprovalB))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(13, 13, 13)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(bReqIdTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(bReqNameTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5)))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addGap(40, 40, 40)
                            .addComponent(bReqApprovalB, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createSequentialGroup()
                            .addGap(44, 44, 44)
                            .addComponent(bReqBloodGTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(bReqMobileNTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 355, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(29, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void bReqApprovalBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bReqApprovalBActionPerformed
        // TODO add your handling code here:
        int requestId;
        String bloogG = null;
        int donationId;
        
        requestId = Integer.parseInt(bReqIdTF.getText());
        bloogG = bReqBloodGTF.getText();
        
        RetrieveData rd = new RetrieveData();
        ArrayList<Donation> donation;
        donation = rd.getDonationId(bloogG);
        
        donationId = donation.get(0).getDonationId();
        //donorId = donation.get(0).getDonorId();
        if (donationId > 2000) {
            InsertData id = new InsertData();
            UpdateData ud = new UpdateData();
            
            id.insertBloodAssignment(donationId, requestId, bloogG); //ok
            JOptionPane.showMessageDialog(null, "Donation Id: " + donationId);
            ud.updateDonation(donationId);
            ud.updateRequest(requestId);
            JOptionPane.showMessageDialog(null, "Request Id: " + requestId);
            //JOptionPane.showMessageDialog(null, "Assign Successfull");
        } else {
            JOptionPane.showMessageDialog(null, "Blood is not available");
        }
        model.setRowCount(0);
        showRequestTable();

    }//GEN-LAST:event_bReqApprovalBActionPerformed

    private void bloodRequestTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bloodRequestTableMouseClicked
        // TODO add your handling code here:
        int i = bloodRequestTable.getSelectedRow();
        TableModel model = bloodRequestTable.getModel();
        bReqIdTF.setText(model.getValueAt(i, 0).toString());
        bReqNameTF.setText(model.getValueAt(i, 1).toString());
        bReqBloodGTF.setText(model.getValueAt(i, 3).toString());
        bReqMobileNTF.setText(model.getValueAt(i, 4).toString());
    }//GEN-LAST:event_bloodRequestTableMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bReqApprovalB;
    private javax.swing.JTextField bReqBloodGTF;
    private javax.swing.JTextField bReqIdTF;
    private javax.swing.JTextField bReqMobileNTF;
    private javax.swing.JTextField bReqNameTF;
    private javax.swing.JTable bloodRequestTable;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
